{
  "name": "user-service",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/user-service/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "options": {
        "target": "es2017",
        "format": ["cjs"],
        "main": "apps/user-service/src/main.grpc.ts",
        "outputPath": "dist/apps/user-service",
        "tsConfig": "apps/user-service/tsconfig.app.json",
        "assets": []
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "user-service:build"
      }
    },
    "build:lambda": {
      "executor": "@nx/esbuild:esbuild",
      "options": {
        "target": "es2017",
        "format": ["cjs"],
        "main": "apps/user-service/src/main.ts",
        "outputPath": "dist-lambda/apps/user-service",
        "tsConfig": "apps/user-service/tsconfig.app.json",
        "assets": [],
        "external": [
          "@grpc/grpc-js",
          "@grpc/proto-loader",
          "@nestjs/platform-socket.io",
          "cache-manager",
          "class-transformer/storage"
        ]
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx build:lambda user-service",
          "sam build --template-file apps/user-service/template.yaml && sam deploy --template-file apps/user-service/template.yaml --no-confirm-changeset --no-fail-on-empty-changeset"
        ],
        "parallel": false
      }
    }
  },

  "tags": []
}
