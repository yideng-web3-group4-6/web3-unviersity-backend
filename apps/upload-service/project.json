{
  "name": "upload-service",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/upload-service/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "options": {
        "target": "es2017",
        "format": ["cjs"],
        "main": "apps/upload-service/src/main.ts",
        "outputPath": "dist/apps/upload-service",
        "tsConfig": "apps/upload-service/tsconfig.app.json",
        "assets": ["apps/upload-service/src/assets"],
        "skipTypeCheck": true,
        "external": [
          "@nestjs/websockets/socket-module",
          "cache-manager",
          "class-transformer/storage",
          "@grpc/grpc-js",
          "kafkajs",
          "amqplib",
          "amqp-connection-manager",
          "nats",
          "mqtt",
          "ioredis"
        ],
        "bundle": true,
        "platform": "node"
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "upload-service:build"
      }
    },
    "build:lambda": {
      "executor": "@nx/esbuild:esbuild",
      "options": {
        "target": "es2017",
        "format": ["cjs"],
        "main": "apps/upload-service/src/main.ts",
        "outputPath": "dist-lambda/apps/upload-service",
        "tsConfig": "apps/upload-service/tsconfig.app.json",
        "assets": [],
        "skipTypeCheck": true,
        "external": [
          "@nestjs/websockets/socket-module",
          "cache-manager",
          "class-transformer/storage",
          "@grpc/grpc-js",
          "kafkajs",
          "amqplib",
          "amqp-connection-manager",
          "nats",
          "mqtt",
          "ioredis"
        ],
        "bundle": true,
        "platform": "node"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/upload-service/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/upload-service/jest.config.ts"
      }
    }
  },
  "esbuildOptions": {
    "plugins": ["@esbuild-plugins/node-modules-polyfill"]
  },
  "tags": []
}
